/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import java.util.Date;
import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface PrenotazioniDao
{
	/** 
	 * Inserts a new row in the prenotazioni table.
	 */
	public PrenotazioniPk insert(Prenotazioni dto) throws PrenotazioniDaoException;

	/** 
	 * Updates a single row in the prenotazioni table.
	 */
	public void update(PrenotazioniPk pk, Prenotazioni dto) throws PrenotazioniDaoException;

	/** 
	 * Deletes a single row in the prenotazioni table.
	 */
	public void delete(PrenotazioniPk pk) throws PrenotazioniDaoException;

	/** 
	 * Returns the rows from the prenotazioni table that matches the specified primary-key value.
	 */
	public Prenotazioni findByPrimaryKey(PrenotazioniPk pk) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'pre_id = :preId'.
	 */
	public Prenotazioni findByPrimaryKey(long preId) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'struttura_camere_cam_id = :strutturaCamereCamId'.
	 */
	public Prenotazioni[] findByStrutturaCamere(int strutturaCamereCamId) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'struttura_camere_cam_id = :strutturaCamereCamId'.
	 */
	public Prenotazioni[] findWhereStrutturaCamereCamIdEquals(int strutturaCamereCamId) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria ''.
	 */
	public Prenotazioni[] findAll() throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'camere_cam_id = :camereCamId'.
	 */
	public Prenotazioni[] findByCamere(long camereCamId) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'preventivi_pre_id = :preventiviPreId'.
	 */
	public Prenotazioni[] findByPreventivi(long preventiviPreId) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'utente_ute_id = :utenteUteId'.
	 */
	public Prenotazioni[] findByUtente(long utenteUteId) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'pre_id = :preId'.
	 */
	public Prenotazioni[] findWherePreIdEquals(long preId) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'pre_numero = :preNumero'.
	 */
	public Prenotazioni[] findWherePreNumeroEquals(String preNumero) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'pre_data = :preData'.
	 */
	public Prenotazioni[] findWherePreDataEquals(Date preData) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'pre_num_adulti = :preNumAdulti'.
	 */
	public Prenotazioni[] findWherePreNumAdultiEquals(int preNumAdulti) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'pre_num_bamb = :preNumBamb'.
	 */
	public Prenotazioni[] findWherePreNumBambEquals(int preNumBamb) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'pre_checkout = :preCheckout'.
	 */
	public Prenotazioni[] findWherePreCheckoutEquals(Date preCheckout) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'pre_prezzo = :prePrezzo'.
	 */
	public Prenotazioni[] findWherePrePrezzoEquals(float prePrezzo) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'pre_commissioni = :preCommissioni'.
	 */
	public Prenotazioni[] findWherePreCommissioniEquals(float preCommissioni) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'pre_checkin = :preCheckin'.
	 */
	public Prenotazioni[] findWherePreCheckinEquals(Date preCheckin) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'preventivi_pre_id = :preventiviPreId'.
	 */
	public Prenotazioni[] findWherePreventiviPreIdEquals(long preventiviPreId) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'utente_ute_id = :utenteUteId'.
	 */
	public Prenotazioni[] findWhereUtenteUteIdEquals(long utenteUteId) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the criteria 'camere_cam_id = :camereCamId'.
	 */
	public Prenotazioni[] findWhereCamereCamIdEquals(long camereCamId) throws PrenotazioniDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the prenotazioni table that match the specified arbitrary SQL statement
	 */
	public Prenotazioni[] findByDynamicSelect(String sql, Object[] sqlParams) throws PrenotazioniDaoException;

	/** 
	 * Returns all rows from the prenotazioni table that match the specified arbitrary SQL statement
	 */
	public Prenotazioni[] findByDynamicWhere(String sql, Object[] sqlParams) throws PrenotazioniDaoException;

}
