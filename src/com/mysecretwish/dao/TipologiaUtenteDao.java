/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface TipologiaUtenteDao
{
	/** 
	 * Inserts a new row in the tipologia_utente table.
	 */
	public TipologiaUtentePk insert(TipologiaUtente dto) throws TipologiaUtenteDaoException;

	/** 
	 * Updates a single row in the tipologia_utente table.
	 */
	public void update(TipologiaUtentePk pk, TipologiaUtente dto) throws TipologiaUtenteDaoException;

	/** 
	 * Deletes a single row in the tipologia_utente table.
	 */
	public void delete(TipologiaUtentePk pk) throws TipologiaUtenteDaoException;

	/** 
	 * Returns the rows from the tipologia_utente table that matches the specified primary-key value.
	 */
	public TipologiaUtente findByPrimaryKey(TipologiaUtentePk pk) throws TipologiaUtenteDaoException;

	/** 
	 * Returns all rows from the tipologia_utente table that match the criteria 'id = :id'.
	 */
	public TipologiaUtente findByPrimaryKey(long id) throws TipologiaUtenteDaoException;

	/** 
	 * Returns all rows from the tipologia_utente table that match the criteria ''.
	 */
	public TipologiaUtente[] findAll() throws TipologiaUtenteDaoException;

	/** 
	 * Returns all rows from the tipologia_utente table that match the criteria 'id = :id'.
	 */
	public TipologiaUtente[] findWhereIdEquals(long id) throws TipologiaUtenteDaoException;

	/** 
	 * Returns all rows from the tipologia_utente table that match the criteria 'descrizione = :descrizione'.
	 */
	public TipologiaUtente[] findWhereDescrizioneEquals(String descrizione) throws TipologiaUtenteDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the tipologia_utente table that match the specified arbitrary SQL statement
	 */
	public TipologiaUtente[] findByDynamicSelect(String sql, Object[] sqlParams) throws TipologiaUtenteDaoException;

	/** 
	 * Returns all rows from the tipologia_utente table that match the specified arbitrary SQL statement
	 */
	public TipologiaUtente[] findByDynamicWhere(String sql, Object[] sqlParams) throws TipologiaUtenteDaoException;

}
