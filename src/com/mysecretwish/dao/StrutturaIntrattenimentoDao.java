/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface StrutturaIntrattenimentoDao
{
	/** 
	 * Inserts a new row in the struttura_intrattenimento table.
	 */
	public StrutturaIntrattenimentoPk insert(StrutturaIntrattenimento dto) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Updates a single row in the struttura_intrattenimento table.
	 */
	public void update(StrutturaIntrattenimentoPk pk, StrutturaIntrattenimento dto) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Deletes a single row in the struttura_intrattenimento table.
	 */
	public void delete(StrutturaIntrattenimentoPk pk) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns the rows from the struttura_intrattenimento table that matches the specified primary-key value.
	 */
	public StrutturaIntrattenimento findByPrimaryKey(StrutturaIntrattenimentoPk pk) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the criteria 'sin_id = :sinId'.
	 */
	public StrutturaIntrattenimento findByPrimaryKey(long sinId) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the criteria ''.
	 */
	public StrutturaIntrattenimento[] findAll() throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaIntrattenimento[] findByStruttura(long strutturaStrId) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the criteria 'sin_id = :sinId'.
	 */
	public StrutturaIntrattenimento[] findWhereSinIdEquals(long sinId) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the criteria 'sin_giochi_tav = :sinGiochiTav'.
	 */
	public StrutturaIntrattenimento[] findWhereSinGiochiTavEquals(String sinGiochiTav) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the criteria 'sin_libri = :sinLibri'.
	 */
	public StrutturaIntrattenimento[] findWhereSinLibriEquals(String sinLibri) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the criteria 'sin_area_gio_coperto = :sinAreaGioCoperto'.
	 */
	public StrutturaIntrattenimento[] findWhereSinAreaGioCopertoEquals(String sinAreaGioCoperto) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the criteria 'sin_area_gio_aperto = :sinAreaGioAperto'.
	 */
	public StrutturaIntrattenimento[] findWhereSinAreaGioApertoEquals(String sinAreaGioAperto) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the criteria 'sin_canc_sicurezza = :sinCancSicurezza'.
	 */
	public StrutturaIntrattenimento[] findWhereSinCancSicurezzaEquals(String sinCancSicurezza) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the criteria 'sin_tv_bambini = :sinTvBambini'.
	 */
	public StrutturaIntrattenimento[] findWhereSinTvBambiniEquals(String sinTvBambini) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the criteria 'sin_passeggini = :sinPasseggini'.
	 */
	public StrutturaIntrattenimento[] findWhereSinPassegginiEquals(String sinPasseggini) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaIntrattenimento[] findWhereStrutturaStrIdEquals(long strutturaStrId) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the specified arbitrary SQL statement
	 */
	public StrutturaIntrattenimento[] findByDynamicSelect(String sql, Object[] sqlParams) throws StrutturaIntrattenimentoDaoException;

	/** 
	 * Returns all rows from the struttura_intrattenimento table that match the specified arbitrary SQL statement
	 */
	public StrutturaIntrattenimento[] findByDynamicWhere(String sql, Object[] sqlParams) throws StrutturaIntrattenimentoDaoException;

}
