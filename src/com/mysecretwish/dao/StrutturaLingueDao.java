/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface StrutturaLingueDao
{
	/** 
	 * Inserts a new row in the struttura_lingue table.
	 */
	public StrutturaLinguePk insert(StrutturaLingue dto) throws StrutturaLingueDaoException;

	/** 
	 * Updates a single row in the struttura_lingue table.
	 */
	public void update(StrutturaLinguePk pk, StrutturaLingue dto) throws StrutturaLingueDaoException;

	/** 
	 * Deletes a single row in the struttura_lingue table.
	 */
	public void delete(StrutturaLinguePk pk) throws StrutturaLingueDaoException;

	/** 
	 * Returns the rows from the struttura_lingue table that matches the specified primary-key value.
	 */
	public StrutturaLingue findByPrimaryKey(StrutturaLinguePk pk) throws StrutturaLingueDaoException;

	/** 
	 * Returns all rows from the struttura_lingue table that match the criteria 'sli_id = :sliId'.
	 */
	public StrutturaLingue findByPrimaryKey(long sliId) throws StrutturaLingueDaoException;

	/** 
	 * Returns all rows from the struttura_lingue table that match the criteria ''.
	 */
	public StrutturaLingue[] findAll() throws StrutturaLingueDaoException;

	/** 
	 * Returns all rows from the struttura_lingue table that match the criteria 'lingue_parlate_lin_id = :lingueParlateLinId'.
	 */
	public StrutturaLingue[] findByLingueParlate(long lingueParlateLinId) throws StrutturaLingueDaoException;

	/** 
	 * Returns all rows from the struttura_lingue table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaLingue[] findByStruttura(long strutturaStrId) throws StrutturaLingueDaoException;

	/** 
	 * Returns all rows from the struttura_lingue table that match the criteria 'sli_id = :sliId'.
	 */
	public StrutturaLingue[] findWhereSliIdEquals(long sliId) throws StrutturaLingueDaoException;

	/** 
	 * Returns all rows from the struttura_lingue table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaLingue[] findWhereStrutturaStrIdEquals(long strutturaStrId) throws StrutturaLingueDaoException;

	/** 
	 * Returns all rows from the struttura_lingue table that match the criteria 'lingue_parlate_lin_id = :lingueParlateLinId'.
	 */
	public StrutturaLingue[] findWhereLingueParlateLinIdEquals(long lingueParlateLinId) throws StrutturaLingueDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the struttura_lingue table that match the specified arbitrary SQL statement
	 */
	public StrutturaLingue[] findByDynamicSelect(String sql, Object[] sqlParams) throws StrutturaLingueDaoException;

	/** 
	 * Returns all rows from the struttura_lingue table that match the specified arbitrary SQL statement
	 */
	public StrutturaLingue[] findByDynamicWhere(String sql, Object[] sqlParams) throws StrutturaLingueDaoException;

}
