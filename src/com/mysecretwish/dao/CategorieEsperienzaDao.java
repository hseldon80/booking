/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface CategorieEsperienzaDao
{
	/** 
	 * Inserts a new row in the categorie_esperienza table.
	 */
	public CategorieEsperienzaPk insert(CategorieEsperienza dto) throws CategorieEsperienzaDaoException;

	/** 
	 * Updates a single row in the categorie_esperienza table.
	 */
	public void update(CategorieEsperienzaPk pk, CategorieEsperienza dto) throws CategorieEsperienzaDaoException;

	/** 
	 * Deletes a single row in the categorie_esperienza table.
	 */
	public void delete(CategorieEsperienzaPk pk) throws CategorieEsperienzaDaoException;

	/** 
	 * Returns the rows from the categorie_esperienza table that matches the specified primary-key value.
	 */
	public CategorieEsperienza findByPrimaryKey(CategorieEsperienzaPk pk) throws CategorieEsperienzaDaoException;

	/** 
	 * Returns all rows from the categorie_esperienza table that match the criteria 'cat_id = :catId'.
	 */
	public CategorieEsperienza findByPrimaryKey(long catId) throws CategorieEsperienzaDaoException;

	/** 
	 * Returns all rows from the categorie_esperienza table that match the criteria ''.
	 */
	public CategorieEsperienza[] findAll() throws CategorieEsperienzaDaoException;

	/** 
	 * Returns all rows from the categorie_esperienza table that match the criteria 'cat_id = :catId'.
	 */
	public CategorieEsperienza[] findWhereCatIdEquals(long catId) throws CategorieEsperienzaDaoException;

	/** 
	 * Returns all rows from the categorie_esperienza table that match the criteria 'cat_descrizione = :catDescrizione'.
	 */
	public CategorieEsperienza[] findWhereCatDescrizioneEquals(String catDescrizione) throws CategorieEsperienzaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the categorie_esperienza table that match the specified arbitrary SQL statement
	 */
	public CategorieEsperienza[] findByDynamicSelect(String sql, Object[] sqlParams) throws CategorieEsperienzaDaoException;

	/** 
	 * Returns all rows from the categorie_esperienza table that match the specified arbitrary SQL statement
	 */
	public CategorieEsperienza[] findByDynamicWhere(String sql, Object[] sqlParams) throws CategorieEsperienzaDaoException;

}
