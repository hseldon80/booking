/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface StrutturaCondPagamentoDao
{
	/** 
	 * Inserts a new row in the struttura_cond_pagamento table.
	 */
	public StrutturaCondPagamentoPk insert(StrutturaCondPagamento dto) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Updates a single row in the struttura_cond_pagamento table.
	 */
	public void update(StrutturaCondPagamentoPk pk, StrutturaCondPagamento dto) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Deletes a single row in the struttura_cond_pagamento table.
	 */
	public void delete(StrutturaCondPagamentoPk pk) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns the rows from the struttura_cond_pagamento table that matches the specified primary-key value.
	 */
	public StrutturaCondPagamento findByPrimaryKey(StrutturaCondPagamentoPk pk) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_id = :scpId'.
	 */
	public StrutturaCondPagamento findByPrimaryKey(long scpId) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria ''.
	 */
	public StrutturaCondPagamento[] findAll() throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaCondPagamento[] findByStruttura(long strutturaStrId) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_id = :scpId'.
	 */
	public StrutturaCondPagamento[] findWhereScpIdEquals(long scpId) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_accetta_carte = :scpAccettaCarte'.
	 */
	public StrutturaCondPagamento[] findWhereScpAccettaCarteEquals(String scpAccettaCarte) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_american_express = :scpAmericanExpress'.
	 */
	public StrutturaCondPagamento[] findWhereScpAmericanExpressEquals(String scpAmericanExpress) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_mastercard = :scpMastercard'.
	 */
	public StrutturaCondPagamento[] findWhereScpMastercardEquals(String scpMastercard) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_jcb = :scpJcb'.
	 */
	public StrutturaCondPagamento[] findWhereScpJcbEquals(String scpJcb) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_discover = :scpDiscover'.
	 */
	public StrutturaCondPagamento[] findWhereScpDiscoverEquals(String scpDiscover) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_cartasi = :scpCartasi'.
	 */
	public StrutturaCondPagamento[] findWhereScpCartasiEquals(String scpCartasi) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_unionpay = :scpUnionpay'.
	 */
	public StrutturaCondPagamento[] findWhereScpUnionpayEquals(String scpUnionpay) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_visa = :scpVisa'.
	 */
	public StrutturaCondPagamento[] findWhereScpVisaEquals(String scpVisa) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_maestro = :scpMaestro'.
	 */
	public StrutturaCondPagamento[] findWhereScpMaestroEquals(String scpMaestro) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_diners = :scpDiners'.
	 */
	public StrutturaCondPagamento[] findWhereScpDinersEquals(String scpDiners) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_pin = :scpPin'.
	 */
	public StrutturaCondPagamento[] findWhereScpPinEquals(String scpPin) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_pren_no_carta_connaz = :scpPrenNoCartaConnaz'.
	 */
	public StrutturaCondPagamento[] findWhereScpPrenNoCartaConnazEquals(String scpPrenNoCartaConnaz) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_pag_online = :scpPagOnline'.
	 */
	public StrutturaCondPagamento[] findWhereScpPagOnlineEquals(String scpPagOnline) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_attivo = :scpAttivo'.
	 */
	public StrutturaCondPagamento[] findWhereScpAttivoEquals(String scpAttivo) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaCondPagamento[] findWhereStrutturaStrIdEquals(long strutturaStrId) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the criteria 'scp_imp_last_minut = :scpImpLastMinut'.
	 */
	public StrutturaCondPagamento[] findWhereScpImpLastMinutEquals(long scpImpLastMinut) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the specified arbitrary SQL statement
	 */
	public StrutturaCondPagamento[] findByDynamicSelect(String sql, Object[] sqlParams) throws StrutturaCondPagamentoDaoException;

	/** 
	 * Returns all rows from the struttura_cond_pagamento table that match the specified arbitrary SQL statement
	 */
	public StrutturaCondPagamento[] findByDynamicWhere(String sql, Object[] sqlParams) throws StrutturaCondPagamentoDaoException;

}
