/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface StrutturaCondCancelDao
{
	/** 
	 * Inserts a new row in the struttura_cond_cancel table.
	 */
	public StrutturaCondCancelPk insert(StrutturaCondCancel dto) throws StrutturaCondCancelDaoException;

	/** 
	 * Updates a single row in the struttura_cond_cancel table.
	 */
	public void update(StrutturaCondCancelPk pk, StrutturaCondCancel dto) throws StrutturaCondCancelDaoException;

	/** 
	 * Deletes a single row in the struttura_cond_cancel table.
	 */
	public void delete(StrutturaCondCancelPk pk) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns the rows from the struttura_cond_cancel table that matches the specified primary-key value.
	 */
	public StrutturaCondCancel findByPrimaryKey(StrutturaCondCancelPk pk) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria 'scc_id = :sccId'.
	 */
	public StrutturaCondCancel findByPrimaryKey(long sccId) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria ''.
	 */
	public StrutturaCondCancel[] findAll() throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaCondCancel[] findByStruttura(long strutturaStrId) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria 'scc_id = :sccId'.
	 */
	public StrutturaCondCancel[] findWhereSccIdEquals(long sccId) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria 'scc_canc_gratuita = :sccCancGratuita'.
	 */
	public StrutturaCondCancel[] findWhereSccCancGratuitaEquals(String sccCancGratuita) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria 'scc_tempor_canc = :sccTemporCanc'.
	 */
	public StrutturaCondCancel[] findWhereSccTemporCancEquals(String sccTemporCanc) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria 'scc_pag_anticip = :sccPagAnticip'.
	 */
	public StrutturaCondCancel[] findWhereSccPagAnticipEquals(String sccPagAnticip) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria 'scc_non_rimborsabile = :sccNonRimborsabile'.
	 */
	public StrutturaCondCancel[] findWhereSccNonRimborsabileEquals(String sccNonRimborsabile) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria 'scc_attivo = :sccAttivo'.
	 */
	public StrutturaCondCancel[] findWhereSccAttivoEquals(String sccAttivo) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaCondCancel[] findWhereStrutturaStrIdEquals(long strutturaStrId) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria 'scc_tempo_prima = :sccTempoPrima'.
	 */
	public StrutturaCondCancel[] findWhereSccTempoPrimaEquals(long sccTempoPrima) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria 'scc_add_oltre_limite = :sccAddOltreLimite'.
	 */
	public StrutturaCondCancel[] findWhereSccAddOltreLimiteEquals(long sccAddOltreLimite) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria 'scc_add_mac_prese = :sccAddMacPrese'.
	 */
	public StrutturaCondCancel[] findWhereSccAddMacPreseEquals(long sccAddMacPrese) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the criteria 'scc_periodo_toll = :sccPeriodoToll'.
	 */
	public StrutturaCondCancel[] findWhereSccPeriodoTollEquals(long sccPeriodoToll) throws StrutturaCondCancelDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the specified arbitrary SQL statement
	 */
	public StrutturaCondCancel[] findByDynamicSelect(String sql, Object[] sqlParams) throws StrutturaCondCancelDaoException;

	/** 
	 * Returns all rows from the struttura_cond_cancel table that match the specified arbitrary SQL statement
	 */
	public StrutturaCondCancel[] findByDynamicWhere(String sql, Object[] sqlParams) throws StrutturaCondCancelDaoException;

}
