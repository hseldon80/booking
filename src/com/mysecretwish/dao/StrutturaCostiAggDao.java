/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface StrutturaCostiAggDao
{
	/** 
	 * Inserts a new row in the struttura_costi_agg table.
	 */
	public StrutturaCostiAggPk insert(StrutturaCostiAgg dto) throws StrutturaCostiAggDaoException;

	/** 
	 * Updates a single row in the struttura_costi_agg table.
	 */
	public void update(StrutturaCostiAggPk pk, StrutturaCostiAgg dto) throws StrutturaCostiAggDaoException;

	/** 
	 * Deletes a single row in the struttura_costi_agg table.
	 */
	public void delete(StrutturaCostiAggPk pk) throws StrutturaCostiAggDaoException;

	/** 
	 * Returns the rows from the struttura_costi_agg table that matches the specified primary-key value.
	 */
	public StrutturaCostiAgg findByPrimaryKey(StrutturaCostiAggPk pk) throws StrutturaCostiAggDaoException;

	/** 
	 * Returns all rows from the struttura_costi_agg table that match the criteria 'sca_id = :scaId AND struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaCostiAgg findByPrimaryKey(long scaId, long strutturaStrId) throws StrutturaCostiAggDaoException;

	/** 
	 * Returns all rows from the struttura_costi_agg table that match the criteria ''.
	 */
	public StrutturaCostiAgg[] findAll() throws StrutturaCostiAggDaoException;

	/** 
	 * Returns all rows from the struttura_costi_agg table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaCostiAgg[] findByStruttura(long strutturaStrId) throws StrutturaCostiAggDaoException;

	/** 
	 * Returns all rows from the struttura_costi_agg table that match the criteria 'sca_id = :scaId'.
	 */
	public StrutturaCostiAgg[] findWhereScaIdEquals(long scaId) throws StrutturaCostiAggDaoException;

	/** 
	 * Returns all rows from the struttura_costi_agg table that match the criteria 'sca_dep_cauzion = :scaDepCauzion'.
	 */
	public StrutturaCostiAgg[] findWhereScaDepCauzionEquals(String scaDepCauzion) throws StrutturaCostiAggDaoException;

	/** 
	 * Returns all rows from the struttura_costi_agg table that match the criteria 'sca_inc_prezzo = :scaIncPrezzo'.
	 */
	public StrutturaCostiAgg[] findWhereScaIncPrezzoEquals(String scaIncPrezzo) throws StrutturaCostiAggDaoException;

	/** 
	 * Returns all rows from the struttura_costi_agg table that match the criteria 'sca_importo = :scaImporto'.
	 */
	public StrutturaCostiAgg[] findWhereScaImportoEquals(float scaImporto) throws StrutturaCostiAggDaoException;

	/** 
	 * Returns all rows from the struttura_costi_agg table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaCostiAgg[] findWhereStrutturaStrIdEquals(long strutturaStrId) throws StrutturaCostiAggDaoException;

	/** 
	 * Returns all rows from the struttura_costi_agg table that match the criteria 'sca_tipo_costo = :scaTipoCosto'.
	 */
	public StrutturaCostiAgg[] findWhereScaTipoCostoEquals(long scaTipoCosto) throws StrutturaCostiAggDaoException;

	/** 
	 * Returns all rows from the struttura_costi_agg table that match the criteria 'sca_tipo_pag = :scaTipoPag'.
	 */
	public StrutturaCostiAgg[] findWhereScaTipoPagEquals(long scaTipoPag) throws StrutturaCostiAggDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the struttura_costi_agg table that match the specified arbitrary SQL statement
	 */
	public StrutturaCostiAgg[] findByDynamicSelect(String sql, Object[] sqlParams) throws StrutturaCostiAggDaoException;

	/** 
	 * Returns all rows from the struttura_costi_agg table that match the specified arbitrary SQL statement
	 */
	public StrutturaCostiAgg[] findByDynamicWhere(String sql, Object[] sqlParams) throws StrutturaCostiAggDaoException;

}
