/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface CamereTecnologiaDao
{
	/** 
	 * Inserts a new row in the camere_tecnologia table.
	 */
	public CamereTecnologiaPk insert(CamereTecnologia dto) throws CamereTecnologiaDaoException;

	/** 
	 * Updates a single row in the camere_tecnologia table.
	 */
	public void update(CamereTecnologiaPk pk, CamereTecnologia dto) throws CamereTecnologiaDaoException;

	/** 
	 * Deletes a single row in the camere_tecnologia table.
	 */
	public void delete(CamereTecnologiaPk pk) throws CamereTecnologiaDaoException;

	/** 
	 * Returns the rows from the camere_tecnologia table that matches the specified primary-key value.
	 */
	public CamereTecnologia findByPrimaryKey(CamereTecnologiaPk pk) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_id = :sctId'.
	 */
	public CamereTecnologia findByPrimaryKey(long sctId) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria ''.
	 */
	public CamereTecnologia[] findAll() throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'camere_cam_id = :camereCamId'.
	 */
	public CamereTecnologia[] findByCamere(long camereCamId) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_id = :sctId'.
	 */
	public CamereTecnologia[] findWhereSctIdEquals(long sctId) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_ps4 = :sctPs4'.
	 */
	public CamereTecnologia[] findWhereSctPs4Equals(String sctPs4) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_wii_u = :sctWiiU'.
	 */
	public CamereTecnologia[] findWhereSctWiiUEquals(String sctWiiU) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_xbox_one = :sctXboxOne'.
	 */
	public CamereTecnologia[] findWhereSctXboxOneEquals(String sctXboxOne) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_computer = :sctComputer'.
	 */
	public CamereTecnologia[] findWhereSctComputerEquals(String sctComputer) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_console_video = :sctConsoleVideo'.
	 */
	public CamereTecnologia[] findWhereSctConsoleVideoEquals(String sctConsoleVideo) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_nintendo_wii = :sctNintendoWii'.
	 */
	public CamereTecnologia[] findWhereSctNintendoWiiEquals(String sctNintendoWii) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_ps2 = :sctPs2'.
	 */
	public CamereTecnologia[] findWhereSctPs2Equals(String sctPs2) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_ps3 = :sctPs3'.
	 */
	public CamereTecnologia[] findWhereSctPs3Equals(String sctPs3) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_xbox360 = :sctXbox360'.
	 */
	public CamereTecnologia[] findWhereSctXbox360Equals(String sctXbox360) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_portatile = :sctPortatile'.
	 */
	public CamereTecnologia[] findWhereSctPortatileEquals(String sctPortatile) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_ipad = :sctIpad'.
	 */
	public CamereTecnologia[] findWhereSctIpadEquals(String sctIpad) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_canali_cavo = :sctCanaliCavo'.
	 */
	public CamereTecnologia[] findWhereSctCanaliCavoEquals(String sctCanaliCavo) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_lettore_cd = :sctLettoreCd'.
	 */
	public CamereTecnologia[] findWhereSctLettoreCdEquals(String sctLettoreCd) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_lettore_dvd = :sctLettoreDvd'.
	 */
	public CamereTecnologia[] findWhereSctLettoreDvdEquals(String sctLettoreDvd) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_fax = :sctFax'.
	 */
	public CamereTecnologia[] findWhereSctFaxEquals(String sctFax) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_docking = :sctDocking'.
	 */
	public CamereTecnologia[] findWhereSctDockingEquals(String sctDocking) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_cassaforte_port = :sctCassafortePort'.
	 */
	public CamereTecnologia[] findWhereSctCassafortePortEquals(String sctCassafortePort) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_tv_piatta = :sctTvPiatta'.
	 */
	public CamereTecnologia[] findWhereSctTvPiattaEquals(String sctTvPiatta) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_canali_ppv = :sctCanaliPpv'.
	 */
	public CamereTecnologia[] findWhereSctCanaliPpvEquals(String sctCanaliPpv) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_radio = :sctRadio'.
	 */
	public CamereTecnologia[] findWhereSctRadioEquals(String sctRadio) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_canali_sat = :sctCanaliSat'.
	 */
	public CamereTecnologia[] findWhereSctCanaliSatEquals(String sctCanaliSat) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_telefono = :sctTelefono'.
	 */
	public CamereTecnologia[] findWhereSctTelefonoEquals(String sctTelefono) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_tv = :sctTv'.
	 */
	public CamereTecnologia[] findWhereSctTvEquals(String sctTv) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_videoregistr = :sctVideoregistr'.
	 */
	public CamereTecnologia[] findWhereSctVideoregistrEquals(String sctVideoregistr) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_videogiochi = :sctVideogiochi'.
	 */
	public CamereTecnologia[] findWhereSctVideogiochiEquals(String sctVideogiochi) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_lettore_blur = :sctLettoreBlur'.
	 */
	public CamereTecnologia[] findWhereSctLettoreBlurEquals(String sctLettoreBlur) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_wifi_portatile = :sctWifiPortatile'.
	 */
	public CamereTecnologia[] findWhereSctWifiPortatileEquals(String sctWifiPortatile) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_smartphone = :sctSmartphone'.
	 */
	public CamereTecnologia[] findWhereSctSmartphoneEquals(String sctSmartphone) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'sct_streaming = :sctStreaming'.
	 */
	public CamereTecnologia[] findWhereSctStreamingEquals(String sctStreaming) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the criteria 'camere_cam_id = :camereCamId'.
	 */
	public CamereTecnologia[] findWhereCamereCamIdEquals(long camereCamId) throws CamereTecnologiaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the camere_tecnologia table that match the specified arbitrary SQL statement
	 */
	public CamereTecnologia[] findByDynamicSelect(String sql, Object[] sqlParams) throws CamereTecnologiaDaoException;

	/** 
	 * Returns all rows from the camere_tecnologia table that match the specified arbitrary SQL statement
	 */
	public CamereTecnologia[] findByDynamicWhere(String sql, Object[] sqlParams) throws CamereTecnologiaDaoException;

}
