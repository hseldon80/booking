/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface StrutturaRistorazioneAperturaDao
{
	/** 
	 * Inserts a new row in the struttura_ristorazione_apertura table.
	 */
	public StrutturaRistorazioneAperturaPk insert(StrutturaRistorazioneApertura dto) throws StrutturaRistorazioneAperturaDaoException;

	/** 
	 * Updates a single row in the struttura_ristorazione_apertura table.
	 */
	public void update(StrutturaRistorazioneAperturaPk pk, StrutturaRistorazioneApertura dto) throws StrutturaRistorazioneAperturaDaoException;

	/** 
	 * Deletes a single row in the struttura_ristorazione_apertura table.
	 */
	public void delete(StrutturaRistorazioneAperturaPk pk) throws StrutturaRistorazioneAperturaDaoException;

	/** 
	 * Returns the rows from the struttura_ristorazione_apertura table that matches the specified primary-key value.
	 */
	public StrutturaRistorazioneApertura findByPrimaryKey(StrutturaRistorazioneAperturaPk pk) throws StrutturaRistorazioneAperturaDaoException;

	/** 
	 * Returns all rows from the struttura_ristorazione_apertura table that match the criteria 'sra_id = :sraId'.
	 */
	public StrutturaRistorazioneApertura findByPrimaryKey(long sraId) throws StrutturaRistorazioneAperturaDaoException;

	/** 
	 * Returns all rows from the struttura_ristorazione_apertura table that match the criteria ''.
	 */
	public StrutturaRistorazioneApertura[] findAll() throws StrutturaRistorazioneAperturaDaoException;

	/** 
	 * Returns all rows from the struttura_ristorazione_apertura table that match the criteria 'struttura_ristorazione_id = :strutturaRistorazioneId'.
	 */
	public StrutturaRistorazioneApertura[] findByStrutturaRistorazione(long strutturaRistorazioneId) throws StrutturaRistorazioneAperturaDaoException;

	/** 
	 * Returns all rows from the struttura_ristorazione_apertura table that match the criteria 'sra_id = :sraId'.
	 */
	public StrutturaRistorazioneApertura[] findWhereSraIdEquals(long sraId) throws StrutturaRistorazioneAperturaDaoException;

	/** 
	 * Returns all rows from the struttura_ristorazione_apertura table that match the criteria 'sri_giorno_apertura = :sriGiornoApertura'.
	 */
	public StrutturaRistorazioneApertura[] findWhereSriGiornoAperturaEquals(long sriGiornoApertura) throws StrutturaRistorazioneAperturaDaoException;

	/** 
	 * Returns all rows from the struttura_ristorazione_apertura table that match the criteria 'struttura_ristorazione_id = :strutturaRistorazioneId'.
	 */
	public StrutturaRistorazioneApertura[] findWhereStrutturaRistorazioneIdEquals(long strutturaRistorazioneId) throws StrutturaRistorazioneAperturaDaoException;

	/** 
	 * Returns all rows from the struttura_ristorazione_apertura table that match the criteria 'sri_aperto_dalle = :sriApertoDalle'.
	 */
	public StrutturaRistorazioneApertura[] findWhereSriApertoDalleEquals(String sriApertoDalle) throws StrutturaRistorazioneAperturaDaoException;

	/** 
	 * Returns all rows from the struttura_ristorazione_apertura table that match the criteria 'sri_aperto_alle = :sriApertoAlle'.
	 */
	public StrutturaRistorazioneApertura[] findWhereSriApertoAlleEquals(String sriApertoAlle) throws StrutturaRistorazioneAperturaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the struttura_ristorazione_apertura table that match the specified arbitrary SQL statement
	 */
	public StrutturaRistorazioneApertura[] findByDynamicSelect(String sql, Object[] sqlParams) throws StrutturaRistorazioneAperturaDaoException;

	/** 
	 * Returns all rows from the struttura_ristorazione_apertura table that match the specified arbitrary SQL statement
	 */
	public StrutturaRistorazioneApertura[] findByDynamicWhere(String sql, Object[] sqlParams) throws StrutturaRistorazioneAperturaDaoException;

}
