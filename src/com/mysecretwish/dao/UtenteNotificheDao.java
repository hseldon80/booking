/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import java.util.Date;
import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface UtenteNotificheDao
{
	/** 
	 * Inserts a new row in the utente_notifiche table.
	 */
	public UtenteNotifichePk insert(UtenteNotifiche dto) throws UtenteNotificheDaoException;

	/** 
	 * Updates a single row in the utente_notifiche table.
	 */
	public void update(UtenteNotifichePk pk, UtenteNotifiche dto) throws UtenteNotificheDaoException;

	/** 
	 * Deletes a single row in the utente_notifiche table.
	 */
	public void delete(UtenteNotifichePk pk) throws UtenteNotificheDaoException;

	/** 
	 * Returns the rows from the utente_notifiche table that matches the specified primary-key value.
	 */
	public UtenteNotifiche findByPrimaryKey(UtenteNotifichePk pk) throws UtenteNotificheDaoException;

	/** 
	 * Returns all rows from the utente_notifiche table that match the criteria 'notifiche_id = :notificheId'.
	 */
	public UtenteNotifiche findByPrimaryKey(long notificheId) throws UtenteNotificheDaoException;

	/** 
	 * Returns all rows from the utente_notifiche table that match the criteria ''.
	 */
	public UtenteNotifiche[] findAll() throws UtenteNotificheDaoException;

	/** 
	 * Returns all rows from the utente_notifiche table that match the criteria 'utente_id = :utenteId'.
	 */
	public UtenteNotifiche[] findByUtente(long utenteId) throws UtenteNotificheDaoException;

	/** 
	 * Returns all rows from the utente_notifiche table that match the criteria 'notifiche_id = :notificheId'.
	 */
	public UtenteNotifiche[] findWhereNotificheIdEquals(long notificheId) throws UtenteNotificheDaoException;

	/** 
	 * Returns all rows from the utente_notifiche table that match the criteria 'utente_id = :utenteId'.
	 */
	public UtenteNotifiche[] findWhereUtenteIdEquals(long utenteId) throws UtenteNotificheDaoException;

	/** 
	 * Returns all rows from the utente_notifiche table that match the criteria 'data_notifica = :dataNotifica'.
	 */
	public UtenteNotifiche[] findWhereDataNotificaEquals(Date dataNotifica) throws UtenteNotificheDaoException;

	/** 
	 * Returns all rows from the utente_notifiche table that match the criteria 'testo_notifica = :testoNotifica'.
	 */
	public UtenteNotifiche[] findWhereTestoNotificaEquals(String testoNotifica) throws UtenteNotificheDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the utente_notifiche table that match the specified arbitrary SQL statement
	 */
	public UtenteNotifiche[] findByDynamicSelect(String sql, Object[] sqlParams) throws UtenteNotificheDaoException;

	/** 
	 * Returns all rows from the utente_notifiche table that match the specified arbitrary SQL statement
	 */
	public UtenteNotifiche[] findByDynamicWhere(String sql, Object[] sqlParams) throws UtenteNotificheDaoException;

}
