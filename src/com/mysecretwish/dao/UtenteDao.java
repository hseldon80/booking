/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import java.util.Date;
import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface UtenteDao
{
	/** 
	 * Inserts a new row in the utente table.
	 */
	public UtentePk insert(Utente dto) throws UtenteDaoException;

	/** 
	 * Updates a single row in the utente table.
	 */
	public void update(UtentePk pk, Utente dto) throws UtenteDaoException;

	/** 
	 * Deletes a single row in the utente table.
	 */
	public void delete(UtentePk pk) throws UtenteDaoException;

	/** 
	 * Returns the rows from the utente table that matches the specified primary-key value.
	 */
	public Utente findByPrimaryKey(UtentePk pk) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_id = :uteId'.
	 */
	public Utente findByPrimaryKey(long uteId) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria ''.
	 */
	public Utente[] findAll() throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'fk_comune = :fkComune'.
	 */
	public Utente[] findByComuni(long fkComune) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'fk_comune_azienda = :fkComuneAzienda'.
	 */
	public Utente[] findByComuni2(long fkComuneAzienda) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'fk_paesi = :fkPaesi'.
	 */
	public Utente[] findByPaesi(long fkPaesi) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_tipologia = :uteTipologia'.
	 */
	public Utente[] findByTipologiaUtente(long uteTipologia) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'fk_preferenza_valuta = :fkPreferenzaValuta'.
	 */
	public Utente[] findByValute(long fkPreferenzaValuta) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_id = :uteId'.
	 */
	public Utente[] findWhereUteIdEquals(long uteId) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_cognome = :uteCognome'.
	 */
	public Utente[] findWhereUteCognomeEquals(String uteCognome) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_nome = :uteNome'.
	 */
	public Utente[] findWhereUteNomeEquals(String uteNome) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_email = :uteEmail'.
	 */
	public Utente[] findWhereUteEmailEquals(String uteEmail) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_password = :utePassword'.
	 */
	public Utente[] findWhereUtePasswordEquals(String utePassword) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_last_login = :uteLastLogin'.
	 */
	public Utente[] findWhereUteLastLoginEquals(Date uteLastLogin) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_cellulare = :uteCellulare'.
	 */
	public Utente[] findWhereUteCellulareEquals(String uteCellulare) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_sesso = :uteSesso'.
	 */
	public Utente[] findWhereUteSessoEquals(String uteSesso) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_data_nascita = :uteDataNascita'.
	 */
	public Utente[] findWhereUteDataNascitaEquals(Date uteDataNascita) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_titolo = :uteTitolo'.
	 */
	public Utente[] findWhereUteTitoloEquals(long uteTitolo) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'fk_paesi = :fkPaesi'.
	 */
	public Utente[] findWhereFkPaesiEquals(long fkPaesi) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_carta_numero = :uteCartaNumero'.
	 */
	public Utente[] findWhereUteCartaNumeroEquals(String uteCartaNumero) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_carta_titolare = :uteCartaTitolare'.
	 */
	public Utente[] findWhereUteCartaTitolareEquals(String uteCartaTitolare) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_carta_scad_mese = :uteCartaScadMese'.
	 */
	public Utente[] findWhereUteCartaScadMeseEquals(String uteCartaScadMese) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_carta_scad_anno = :uteCartaScadAnno'.
	 */
	public Utente[] findWhereUteCartaScadAnnoEquals(String uteCartaScadAnno) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_carta_usa_per_lav = :uteCartaUsaPerLav'.
	 */
	public Utente[] findWhereUteCartaUsaPerLavEquals(String uteCartaUsaPerLav) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_carta_usa_per_premio = :uteCartaUsaPerPremio'.
	 */
	public Utente[] findWhereUteCartaUsaPerPremioEquals(String uteCartaUsaPerPremio) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_tipologia = :uteTipologia'.
	 */
	public Utente[] findWhereUteTipologiaEquals(long uteTipologia) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_indirizzo = :uteIndirizzo'.
	 */
	public Utente[] findWhereUteIndirizzoEquals(String uteIndirizzo) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'fk_comune = :fkComune'.
	 */
	public Utente[] findWhereFkComuneEquals(long fkComune) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_azienda = :uteAzienda'.
	 */
	public Utente[] findWhereUteAziendaEquals(String uteAzienda) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'fk_comune_azienda = :fkComuneAzienda'.
	 */
	public Utente[] findWhereFkComuneAziendaEquals(long fkComuneAzienda) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_telefono_azienda = :uteTelefonoAzienda'.
	 */
	public Utente[] findWhereUteTelefonoAziendaEquals(String uteTelefonoAzienda) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_piva_azienda = :utePivaAzienda'.
	 */
	public Utente[] findWhereUtePivaAziendaEquals(String utePivaAzienda) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_foto_profilo_path = :uteFotoProfiloPath'.
	 */
	public Utente[] findWhereUteFotoProfiloPathEquals(String uteFotoProfiloPath) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_pagamenti_online = :utePagamentiOnline'.
	 */
	public Utente[] findWhereUtePagamentiOnlineEquals(String utePagamentiOnline) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_quando_pagare = :uteQuandoPagare'.
	 */
	public Utente[] findWhereUteQuandoPagareEquals(String uteQuandoPagare) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_fumatore = :uteFumatore'.
	 */
	public Utente[] findWhereUteFumatoreEquals(String uteFumatore) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'utente_stelle = :utenteStelle'.
	 */
	public Utente[] findWhereUtenteStelleEquals(String utenteStelle) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_camere_ospiti_disabili = :uteCamereOspitiDisabili'.
	 */
	public Utente[] findWhereUteCamereOspitiDisabiliEquals(String uteCamereOspitiDisabili) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_ristorante = :uteRistorante'.
	 */
	public Utente[] findWhereUteRistoranteEquals(String uteRistorante) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_connessione_internet = :uteConnessioneInternet'.
	 */
	public Utente[] findWhereUteConnessioneInternetEquals(String uteConnessioneInternet) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_camera_nonfumatori = :uteCameraNonfumatori'.
	 */
	public Utente[] findWhereUteCameraNonfumatoriEquals(String uteCameraNonfumatori) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_palestra = :utePalestra'.
	 */
	public Utente[] findWhereUtePalestraEquals(String utePalestra) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_camere_familiari = :uteCamereFamiliari'.
	 */
	public Utente[] findWhereUteCamereFamiliariEquals(String uteCamereFamiliari) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_animali = :uteAnimali'.
	 */
	public Utente[] findWhereUteAnimaliEquals(String uteAnimali) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_parcheggio = :uteParcheggio'.
	 */
	public Utente[] findWhereUteParcheggioEquals(String uteParcheggio) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_spa_benessere = :uteSpaBenessere'.
	 */
	public Utente[] findWhereUteSpaBenessereEquals(String uteSpaBenessere) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_wifi = :uteWifi'.
	 */
	public Utente[] findWhereUteWifiEquals(String uteWifi) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_piscina_coperta = :utePiscinaCoperta'.
	 */
	public Utente[] findWhereUtePiscinaCopertaEquals(String utePiscinaCoperta) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_navetta_aeroportuale = :uteNavettaAeroportuale'.
	 */
	public Utente[] findWhereUteNavettaAeroportualeEquals(String uteNavettaAeroportuale) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_connessione_wifi_gratuita = :uteConnessioneWifiGratuita'.
	 */
	public Utente[] findWhereUteConnessioneWifiGratuitaEquals(String uteConnessioneWifiGratuita) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_bar = :uteBar'.
	 */
	public Utente[] findWhereUteBarEquals(String uteBar) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_deposito_bagagli = :uteDepositoBagagli'.
	 */
	public Utente[] findWhereUteDepositoBagagliEquals(String uteDepositoBagagli) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_reception_24ore = :uteReception24ore'.
	 */
	public Utente[] findWhereUteReception24oreEquals(String uteReception24ore) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_per_chi_prenoti = :utePerChiPrenoti'.
	 */
	public Utente[] findWhereUtePerChiPrenotiEquals(String utePerChiPrenoti) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'fk_preferenza_valuta = :fkPreferenzaValuta'.
	 */
	public Utente[] findWhereFkPreferenzaValutaEquals(long fkPreferenzaValuta) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_carta_tipo = :uteCartaTipo'.
	 */
	public Utente[] findWhereUteCartaTipoEquals(int uteCartaTipo) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_cap = :uteCap'.
	 */
	public Utente[] findWhereUteCapEquals(String uteCap) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the criteria 'ute_cap_azienda = :uteCapAzienda'.
	 */
	public Utente[] findWhereUteCapAziendaEquals(String uteCapAzienda) throws UtenteDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the utente table that match the specified arbitrary SQL statement
	 */
	public Utente[] findByDynamicSelect(String sql, Object[] sqlParams) throws UtenteDaoException;

	/** 
	 * Returns all rows from the utente table that match the specified arbitrary SQL statement
	 */
	public Utente[] findByDynamicWhere(String sql, Object[] sqlParams) throws UtenteDaoException;

}
