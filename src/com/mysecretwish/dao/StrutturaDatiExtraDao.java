/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import java.util.Date;
import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface StrutturaDatiExtraDao
{
	/** 
	 * Inserts a new row in the struttura_dati_extra table.
	 */
	public StrutturaDatiExtraPk insert(StrutturaDatiExtra dto) throws StrutturaDatiExtraDaoException;

	/** 
	 * Updates a single row in the struttura_dati_extra table.
	 */
	public void update(StrutturaDatiExtraPk pk, StrutturaDatiExtra dto) throws StrutturaDatiExtraDaoException;

	/** 
	 * Deletes a single row in the struttura_dati_extra table.
	 */
	public void delete(StrutturaDatiExtraPk pk) throws StrutturaDatiExtraDaoException;

	/** 
	 * Returns the rows from the struttura_dati_extra table that matches the specified primary-key value.
	 */
	public StrutturaDatiExtra findByPrimaryKey(StrutturaDatiExtraPk pk) throws StrutturaDatiExtraDaoException;

	/** 
	 * Returns all rows from the struttura_dati_extra table that match the criteria 'dati_estra_id = :datiEstraId'.
	 */
	public StrutturaDatiExtra findByPrimaryKey(long datiEstraId) throws StrutturaDatiExtraDaoException;

	/** 
	 * Returns all rows from the struttura_dati_extra table that match the criteria ''.
	 */
	public StrutturaDatiExtra[] findAll() throws StrutturaDatiExtraDaoException;

	/** 
	 * Returns all rows from the struttura_dati_extra table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaDatiExtra[] findByStruttura(long strutturaStrId) throws StrutturaDatiExtraDaoException;

	/** 
	 * Returns all rows from the struttura_dati_extra table that match the criteria 'str_data_inizio_attivita = :strDataInizioAttivita'.
	 */
	public StrutturaDatiExtra[] findWhereStrDataInizioAttivitaEquals(Date strDataInizioAttivita) throws StrutturaDatiExtraDaoException;

	/** 
	 * Returns all rows from the struttura_dati_extra table that match the criteria 'str_data_costruzione = :strDataCostruzione'.
	 */
	public StrutturaDatiExtra[] findWhereStrDataCostruzioneEquals(Date strDataCostruzione) throws StrutturaDatiExtraDaoException;

	/** 
	 * Returns all rows from the struttura_dati_extra table that match the criteria 'str_data_ultima_ristr = :strDataUltimaRistr'.
	 */
	public StrutturaDatiExtra[] findWhereStrDataUltimaRistrEquals(Date strDataUltimaRistr) throws StrutturaDatiExtraDaoException;

	/** 
	 * Returns all rows from the struttura_dati_extra table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaDatiExtra[] findWhereStrutturaStrIdEquals(long strutturaStrId) throws StrutturaDatiExtraDaoException;

	/** 
	 * Returns all rows from the struttura_dati_extra table that match the criteria 'dati_estra_id = :datiEstraId'.
	 */
	public StrutturaDatiExtra[] findWhereDatiEstraIdEquals(long datiEstraId) throws StrutturaDatiExtraDaoException;

	/** 
	 * Returns all rows from the struttura_dati_extra table that match the criteria 'str_abit_privata = :strAbitPrivata'.
	 */
	public StrutturaDatiExtra[] findWhereStrAbitPrivataEquals(String strAbitPrivata) throws StrutturaDatiExtraDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the struttura_dati_extra table that match the specified arbitrary SQL statement
	 */
	public StrutturaDatiExtra[] findByDynamicSelect(String sql, Object[] sqlParams) throws StrutturaDatiExtraDaoException;

	/** 
	 * Returns all rows from the struttura_dati_extra table that match the specified arbitrary SQL statement
	 */
	public StrutturaDatiExtra[] findByDynamicWhere(String sql, Object[] sqlParams) throws StrutturaDatiExtraDaoException;

}
