/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import java.util.Date;
import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface PreventiviPromozioniDao
{
	/** 
	 * Inserts a new row in the preventivi_promozioni table.
	 */
	public PreventiviPromozioniPk insert(PreventiviPromozioni dto) throws PreventiviPromozioniDaoException;

	/** 
	 * Updates a single row in the preventivi_promozioni table.
	 */
	public void update(PreventiviPromozioniPk pk, PreventiviPromozioni dto) throws PreventiviPromozioniDaoException;

	/** 
	 * Deletes a single row in the preventivi_promozioni table.
	 */
	public void delete(PreventiviPromozioniPk pk) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns the rows from the preventivi_promozioni table that matches the specified primary-key value.
	 */
	public PreventiviPromozioni findByPrimaryKey(PreventiviPromozioniPk pk) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_id = :proId'.
	 */
	public PreventiviPromozioni findByPrimaryKey(long proId) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria ''.
	 */
	public PreventiviPromozioni[] findAll() throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'preventivi_id = :preventiviId'.
	 */
	public PreventiviPromozioni[] findByPreventivi(long preventiviId) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_id = :proId'.
	 */
	public PreventiviPromozioni[] findWhereProIdEquals(long proId) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_nome = :proNome'.
	 */
	public PreventiviPromozioni[] findWhereProNomeEquals(String proNome) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_sconto = :proSconto'.
	 */
	public PreventiviPromozioni[] findWhereProScontoEquals(float proSconto) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_tariffe_pertinenza = :proTariffePertinenza'.
	 */
	public PreventiviPromozioni[] findWhereProTariffePertinenzaEquals(String proTariffePertinenza) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_camere_pertinenza = :proCamerePertinenza'.
	 */
	public PreventiviPromozioni[] findWhereProCamerePertinenzaEquals(String proCamerePertinenza) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_data_validita_inzio = :proDataValiditaInzio'.
	 */
	public PreventiviPromozioni[] findWhereProDataValiditaInzioEquals(Date proDataValiditaInzio) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_data_validita_fine = :proDataValiditaFine'.
	 */
	public PreventiviPromozioni[] findWhereProDataValiditaFineEquals(Date proDataValiditaFine) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_lunedi = :proLunedi'.
	 */
	public PreventiviPromozioni[] findWhereProLunediEquals(String proLunedi) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_martedi = :proMartedi'.
	 */
	public PreventiviPromozioni[] findWhereProMartediEquals(String proMartedi) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_mercoledi = :proMercoledi'.
	 */
	public PreventiviPromozioni[] findWhereProMercolediEquals(String proMercoledi) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_giovedi = :proGiovedi'.
	 */
	public PreventiviPromozioni[] findWhereProGiovediEquals(String proGiovedi) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_venerdi = :proVenerdi'.
	 */
	public PreventiviPromozioni[] findWhereProVenerdiEquals(String proVenerdi) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_sabato = :proSabato'.
	 */
	public PreventiviPromozioni[] findWhereProSabatoEquals(String proSabato) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_domenica = :proDomenica'.
	 */
	public PreventiviPromozioni[] findWhereProDomenicaEquals(String proDomenica) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_non_rimborsabile = :proNonRimborsabile'.
	 */
	public PreventiviPromozioni[] findWhereProNonRimborsabileEquals(Date proNonRimborsabile) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_visibilita_sito = :proVisibilitaSito'.
	 */
	public PreventiviPromozioni[] findWhereProVisibilitaSitoEquals(Date proVisibilitaSito) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_carta_obb = :proCartaObb'.
	 */
	public PreventiviPromozioni[] findWhereProCartaObbEquals(String proCartaObb) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'camere_cam_id = :camereCamId'.
	 */
	public PreventiviPromozioni[] findWhereCamereCamIdEquals(long camereCamId) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'tipologia_promozione_tpp_id = :tipologiaPromozioneTppId'.
	 */
	public PreventiviPromozioni[] findWhereTipologiaPromozioneTppIdEquals(long tipologiaPromozioneTppId) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'visibilita_vis_id = :visibilitaVisId'.
	 */
	public PreventiviPromozioni[] findWhereVisibilitaVisIdEquals(long visibilitaVisId) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_vincolo = :proVincolo'.
	 */
	public PreventiviPromozioni[] findWhereProVincoloEquals(long proVincolo) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'pro_orario = :proOrario'.
	 */
	public PreventiviPromozioni[] findWhereProOrarioEquals(Date proOrario) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the criteria 'preventivi_id = :preventiviId'.
	 */
	public PreventiviPromozioni[] findWherePreventiviIdEquals(long preventiviId) throws PreventiviPromozioniDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the specified arbitrary SQL statement
	 */
	public PreventiviPromozioni[] findByDynamicSelect(String sql, Object[] sqlParams) throws PreventiviPromozioniDaoException;

	/** 
	 * Returns all rows from the preventivi_promozioni table that match the specified arbitrary SQL statement
	 */
	public PreventiviPromozioni[] findByDynamicWhere(String sql, Object[] sqlParams) throws PreventiviPromozioniDaoException;

}
