/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface StrutturaTasseDao
{
	/** 
	 * Inserts a new row in the struttura_tasse table.
	 */
	public StrutturaTassePk insert(StrutturaTasse dto) throws StrutturaTasseDaoException;

	/** 
	 * Updates a single row in the struttura_tasse table.
	 */
	public void update(StrutturaTassePk pk, StrutturaTasse dto) throws StrutturaTasseDaoException;

	/** 
	 * Deletes a single row in the struttura_tasse table.
	 */
	public void delete(StrutturaTassePk pk) throws StrutturaTasseDaoException;

	/** 
	 * Returns the rows from the struttura_tasse table that matches the specified primary-key value.
	 */
	public StrutturaTasse findByPrimaryKey(StrutturaTassePk pk) throws StrutturaTasseDaoException;

	/** 
	 * Returns all rows from the struttura_tasse table that match the criteria 'tas_id = :tasId'.
	 */
	public StrutturaTasse findByPrimaryKey(long tasId) throws StrutturaTasseDaoException;

	/** 
	 * Returns all rows from the struttura_tasse table that match the criteria ''.
	 */
	public StrutturaTasse[] findAll() throws StrutturaTasseDaoException;

	/** 
	 * Returns all rows from the struttura_tasse table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaTasse[] findByStruttura(long strutturaStrId) throws StrutturaTasseDaoException;

	/** 
	 * Returns all rows from the struttura_tasse table that match the criteria 'tas_id = :tasId'.
	 */
	public StrutturaTasse[] findWhereTasIdEquals(long tasId) throws StrutturaTasseDaoException;

	/** 
	 * Returns all rows from the struttura_tasse table that match the criteria 'tas_nome = :tasNome'.
	 */
	public StrutturaTasse[] findWhereTasNomeEquals(String tasNome) throws StrutturaTasseDaoException;

	/** 
	 * Returns all rows from the struttura_tasse table that match the criteria 'tas_costo = :tasCosto'.
	 */
	public StrutturaTasse[] findWhereTasCostoEquals(float tasCosto) throws StrutturaTasseDaoException;

	/** 
	 * Returns all rows from the struttura_tasse table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaTasse[] findWhereStrutturaStrIdEquals(long strutturaStrId) throws StrutturaTasseDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the struttura_tasse table that match the specified arbitrary SQL statement
	 */
	public StrutturaTasse[] findByDynamicSelect(String sql, Object[] sqlParams) throws StrutturaTasseDaoException;

	/** 
	 * Returns all rows from the struttura_tasse table that match the specified arbitrary SQL statement
	 */
	public StrutturaTasse[] findByDynamicWhere(String sql, Object[] sqlParams) throws StrutturaTasseDaoException;

}
