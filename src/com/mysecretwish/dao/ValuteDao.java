/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface ValuteDao
{
	/** 
	 * Inserts a new row in the valute table.
	 */
	public ValutePk insert(Valute dto) throws ValuteDaoException;

	/** 
	 * Updates a single row in the valute table.
	 */
	public void update(ValutePk pk, Valute dto) throws ValuteDaoException;

	/** 
	 * Deletes a single row in the valute table.
	 */
	public void delete(ValutePk pk) throws ValuteDaoException;

	/** 
	 * Returns the rows from the valute table that matches the specified primary-key value.
	 */
	public Valute findByPrimaryKey(ValutePk pk) throws ValuteDaoException;

	/** 
	 * Returns all rows from the valute table that match the criteria 'id = :id'.
	 */
	public Valute findByPrimaryKey(long id) throws ValuteDaoException;

	/** 
	 * Returns all rows from the valute table that match the criteria ''.
	 */
	public Valute[] findAll() throws ValuteDaoException;

	/** 
	 * Returns all rows from the valute table that match the criteria 'id = :id'.
	 */
	public Valute[] findWhereIdEquals(long id) throws ValuteDaoException;

	/** 
	 * Returns all rows from the valute table that match the criteria 'descrizione = :descrizione'.
	 */
	public Valute[] findWhereDescrizioneEquals(String descrizione) throws ValuteDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the valute table that match the specified arbitrary SQL statement
	 */
	public Valute[] findByDynamicSelect(String sql, Object[] sqlParams) throws ValuteDaoException;

	/** 
	 * Returns all rows from the valute table that match the specified arbitrary SQL statement
	 */
	public Valute[] findByDynamicWhere(String sql, Object[] sqlParams) throws ValuteDaoException;

}
