/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface StrutturaFotoDao
{
	/** 
	 * Inserts a new row in the struttura_foto table.
	 */
	public StrutturaFotoPk insert(StrutturaFoto dto) throws StrutturaFotoDaoException;

	/** 
	 * Updates a single row in the struttura_foto table.
	 */
	public void update(StrutturaFotoPk pk, StrutturaFoto dto) throws StrutturaFotoDaoException;

	/** 
	 * Deletes a single row in the struttura_foto table.
	 */
	public void delete(StrutturaFotoPk pk) throws StrutturaFotoDaoException;

	/** 
	 * Returns the rows from the struttura_foto table that matches the specified primary-key value.
	 */
	public StrutturaFoto findByPrimaryKey(StrutturaFotoPk pk) throws StrutturaFotoDaoException;

	/** 
	 * Returns all rows from the struttura_foto table that match the criteria 'foto_id = :fotoId'.
	 */
	public StrutturaFoto findByPrimaryKey(long fotoId) throws StrutturaFotoDaoException;

	/** 
	 * Returns all rows from the struttura_foto table that match the criteria 'fot_id = :fotId'.
	 */
	public StrutturaFoto[] findWhereFotIdEquals(int fotId) throws StrutturaFotoDaoException;

	/** 
	 * Returns all rows from the struttura_foto table that match the criteria 'fot_foto = :fotFoto'.
	 */
	public StrutturaFoto[] findWhereFotFotoEquals(byte[] fotFoto) throws StrutturaFotoDaoException;

	/** 
	 * Returns all rows from the struttura_foto table that match the criteria 'fot_descrizione = :fotDescrizione'.
	 */
	public StrutturaFoto[] findWhereFotDescrizioneEquals(String fotDescrizione) throws StrutturaFotoDaoException;

	/** 
	 * Returns all rows from the struttura_foto table that match the criteria 'fot_principale = :fotPrincipale'.
	 */
	public StrutturaFoto[] findWhereFotPrincipaleEquals(int fotPrincipale) throws StrutturaFotoDaoException;

	/** 
	 * Returns all rows from the struttura_foto table that match the criteria ''.
	 */
	public StrutturaFoto[] findAll() throws StrutturaFotoDaoException;

	/** 
	 * Returns all rows from the struttura_foto table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaFoto[] findByStruttura(long strutturaStrId) throws StrutturaFotoDaoException;

	/** 
	 * Returns all rows from the struttura_foto table that match the criteria 'foto_id = :fotoId'.
	 */
	public StrutturaFoto[] findWhereFotoIdEquals(long fotoId) throws StrutturaFotoDaoException;

	/** 
	 * Returns all rows from the struttura_foto table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaFoto[] findWhereStrutturaStrIdEquals(long strutturaStrId) throws StrutturaFotoDaoException;

	/** 
	 * Returns all rows from the struttura_foto table that match the criteria 'foto_descrizione = :fotoDescrizione'.
	 */
	public StrutturaFoto[] findWhereFotoDescrizioneEquals(String fotoDescrizione) throws StrutturaFotoDaoException;

	/** 
	 * Returns all rows from the struttura_foto table that match the criteria 'foto_principale = :fotoPrincipale'.
	 */
	public StrutturaFoto[] findWhereFotoPrincipaleEquals(int fotoPrincipale) throws StrutturaFotoDaoException;

	/** 
	 * Returns all rows from the struttura_foto table that match the criteria 'foto_path = :fotoPath'.
	 */
	public StrutturaFoto[] findWhereFotoPathEquals(String fotoPath) throws StrutturaFotoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the struttura_foto table that match the specified arbitrary SQL statement
	 */
	public StrutturaFoto[] findByDynamicSelect(String sql, Object[] sqlParams) throws StrutturaFotoDaoException;

	/** 
	 * Returns all rows from the struttura_foto table that match the specified arbitrary SQL statement
	 */
	public StrutturaFoto[] findByDynamicWhere(String sql, Object[] sqlParams) throws StrutturaFotoDaoException;

}
