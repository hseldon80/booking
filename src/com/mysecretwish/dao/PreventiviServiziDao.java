/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface PreventiviServiziDao
{
	/** 
	 * Inserts a new row in the preventivi_servizi table.
	 */
	public PreventiviServiziPk insert(PreventiviServizi dto) throws PreventiviServiziDaoException;

	/** 
	 * Updates a single row in the preventivi_servizi table.
	 */
	public void update(PreventiviServiziPk pk, PreventiviServizi dto) throws PreventiviServiziDaoException;

	/** 
	 * Deletes a single row in the preventivi_servizi table.
	 */
	public void delete(PreventiviServiziPk pk) throws PreventiviServiziDaoException;

	/** 
	 * Returns the rows from the preventivi_servizi table that matches the specified primary-key value.
	 */
	public PreventiviServizi findByPrimaryKey(PreventiviServiziPk pk) throws PreventiviServiziDaoException;

	/** 
	 * Returns all rows from the preventivi_servizi table that match the criteria 'preventivi_servizi_id = :preventiviServiziId'.
	 */
	public PreventiviServizi findByPrimaryKey(long preventiviServiziId) throws PreventiviServiziDaoException;

	/** 
	 * Returns all rows from the preventivi_servizi table that match the criteria ''.
	 */
	public PreventiviServizi[] findAll() throws PreventiviServiziDaoException;

	/** 
	 * Returns all rows from the preventivi_servizi table that match the criteria 'preventivi_id = :preventiviId'.
	 */
	public PreventiviServizi[] findByPreventivi(long preventiviId) throws PreventiviServiziDaoException;

	/** 
	 * Returns all rows from the preventivi_servizi table that match the criteria 'preventivi_servizi_id = :preventiviServiziId'.
	 */
	public PreventiviServizi[] findWherePreventiviServiziIdEquals(long preventiviServiziId) throws PreventiviServiziDaoException;

	/** 
	 * Returns all rows from the preventivi_servizi table that match the criteria 'descrizione_servizio = :descrizioneServizio'.
	 */
	public PreventiviServizi[] findWhereDescrizioneServizioEquals(String descrizioneServizio) throws PreventiviServiziDaoException;

	/** 
	 * Returns all rows from the preventivi_servizi table that match the criteria 'preventivi_id = :preventiviId'.
	 */
	public PreventiviServizi[] findWherePreventiviIdEquals(long preventiviId) throws PreventiviServiziDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the preventivi_servizi table that match the specified arbitrary SQL statement
	 */
	public PreventiviServizi[] findByDynamicSelect(String sql, Object[] sqlParams) throws PreventiviServiziDaoException;

	/** 
	 * Returns all rows from the preventivi_servizi table that match the specified arbitrary SQL statement
	 */
	public PreventiviServizi[] findByDynamicWhere(String sql, Object[] sqlParams) throws PreventiviServiziDaoException;

}
