/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface StrutturaTemplateMessaggioDao
{
	/** 
	 * Inserts a new row in the struttura_template_messaggio table.
	 */
	public StrutturaTemplateMessaggioPk insert(StrutturaTemplateMessaggio dto) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Updates a single row in the struttura_template_messaggio table.
	 */
	public void update(StrutturaTemplateMessaggioPk pk, StrutturaTemplateMessaggio dto) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Deletes a single row in the struttura_template_messaggio table.
	 */
	public void delete(StrutturaTemplateMessaggioPk pk) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Returns the rows from the struttura_template_messaggio table that matches the specified primary-key value.
	 */
	public StrutturaTemplateMessaggio findByPrimaryKey(StrutturaTemplateMessaggioPk pk) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Returns all rows from the struttura_template_messaggio table that match the criteria 'stm_id = :stmId'.
	 */
	public StrutturaTemplateMessaggio findByPrimaryKey(long stmId) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Returns all rows from the struttura_template_messaggio table that match the criteria ''.
	 */
	public StrutturaTemplateMessaggio[] findAll() throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Returns all rows from the struttura_template_messaggio table that match the criteria 'condizioni_con_id = :condizioniConId'.
	 */
	public StrutturaTemplateMessaggio[] findByCondizioniTemplateMessaggi(long condizioniConId) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Returns all rows from the struttura_template_messaggio table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaTemplateMessaggio[] findByStruttura(long strutturaStrId) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Returns all rows from the struttura_template_messaggio table that match the criteria 'stm_id = :stmId'.
	 */
	public StrutturaTemplateMessaggio[] findWhereStmIdEquals(int stmId) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Returns all rows from the struttura_template_messaggio table that match the criteria 'stm_rientra_cond_checkin = :stmRientraCondCheckin'.
	 */
	public StrutturaTemplateMessaggio[] findWhereStmRientraCondCheckinEquals(String stmRientraCondCheckin) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Returns all rows from the struttura_template_messaggio table that match the criteria 'stm_rietnra_cond_checkout = :stmRietnraCondCheckout'.
	 */
	public StrutturaTemplateMessaggio[] findWhereStmRietnraCondCheckoutEquals(String stmRietnraCondCheckout) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Returns all rows from the struttura_template_messaggio table that match the criteria 'stm_risp_parc = :stmRispParc'.
	 */
	public StrutturaTemplateMessaggio[] findWhereStmRispParcEquals(String stmRispParc) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Returns all rows from the struttura_template_messaggio table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaTemplateMessaggio[] findWhereStrutturaStrIdEquals(long strutturaStrId) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Returns all rows from the struttura_template_messaggio table that match the criteria 'condizioni_con_id = :condizioniConId'.
	 */
	public StrutturaTemplateMessaggio[] findWhereCondizioniConIdEquals(long condizioniConId) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the struttura_template_messaggio table that match the specified arbitrary SQL statement
	 */
	public StrutturaTemplateMessaggio[] findByDynamicSelect(String sql, Object[] sqlParams) throws StrutturaTemplateMessaggioDaoException;

	/** 
	 * Returns all rows from the struttura_template_messaggio table that match the specified arbitrary SQL statement
	 */
	public StrutturaTemplateMessaggio[] findByDynamicWhere(String sql, Object[] sqlParams) throws StrutturaTemplateMessaggioDaoException;

}
