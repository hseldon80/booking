/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface StrutturaPiscineDao
{
	/** 
	 * Inserts a new row in the struttura_piscine table.
	 */
	public StrutturaPiscinePk insert(StrutturaPiscine dto) throws StrutturaPiscineDaoException;

	/** 
	 * Updates a single row in the struttura_piscine table.
	 */
	public void update(StrutturaPiscinePk pk, StrutturaPiscine dto) throws StrutturaPiscineDaoException;

	/** 
	 * Deletes a single row in the struttura_piscine table.
	 */
	public void delete(StrutturaPiscinePk pk) throws StrutturaPiscineDaoException;

	/** 
	 * Returns the rows from the struttura_piscine table that matches the specified primary-key value.
	 */
	public StrutturaPiscine findByPrimaryKey(StrutturaPiscinePk pk) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_id = :spiId'.
	 */
	public StrutturaPiscine findByPrimaryKey(long spiId) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria ''.
	 */
	public StrutturaPiscine[] findAll() throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaPiscine[] findByStruttura(long strutturaStrId) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_id = :spiId'.
	 */
	public StrutturaPiscine[] findWhereSpiIdEquals(long spiId) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_scivolo = :spiScivolo'.
	 */
	public StrutturaPiscine[] findWhereSpiScivoloEquals(String spiScivolo) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_spa = :spiSpa'.
	 */
	public StrutturaPiscine[] findWhereSpiSpaEquals(String spiSpa) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_teli = :spiTeli'.
	 */
	public StrutturaPiscine[] findWhereSpiTeliEquals(String spiTeli) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_bagno_turco = :spiBagnoTurco'.
	 */
	public StrutturaPiscine[] findWhereSpiBagnoTurcoEquals(String spiBagnoTurco) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_lettini = :spiLettini'.
	 */
	public StrutturaPiscine[] findWhereSpiLettiniEquals(String spiLettini) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_area_relax = :spiAreaRelax'.
	 */
	public StrutturaPiscine[] findWhereSpiAreaRelaxEquals(String spiAreaRelax) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_ombrelloni = :spiOmbrelloni'.
	 */
	public StrutturaPiscine[] findWhereSpiOmbrelloniEquals(String spiOmbrelloni) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_pediluvio = :spiPediluvio'.
	 */
	public StrutturaPiscine[] findWhereSpiPediluvioEquals(String spiPediluvio) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_servizi_bellezza = :spiServiziBellezza'.
	 */
	public StrutturaPiscine[] findWhereSpiServiziBellezzaEquals(String spiServiziBellezza) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_pacchetti_spa = :spiPacchettiSpa'.
	 */
	public StrutturaPiscine[] findWhereSpiPacchettiSpaEquals(String spiPacchettiSpa) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_poltra_massag = :spiPoltraMassag'.
	 */
	public StrutturaPiscine[] findWhereSpiPoltraMassagEquals(String spiPoltraMassag) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_fitness = :spiFitness'.
	 */
	public StrutturaPiscine[] findWhereSpiFitnessEquals(String spiFitness) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_lezioni_yoga = :spiLezioniYoga'.
	 */
	public StrutturaPiscine[] findWhereSpiLezioniYogaEquals(String spiLezioniYoga) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_lezioni_fitness = :spiLezioniFitness'.
	 */
	public StrutturaPiscine[] findWhereSpiLezioniFitnessEquals(String spiLezioniFitness) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_personal_trainer = :spiPersonalTrainer'.
	 */
	public StrutturaPiscine[] findWhereSpiPersonalTrainerEquals(String spiPersonalTrainer) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_piscina_bamb = :spiPiscinaBamb'.
	 */
	public StrutturaPiscine[] findWhereSpiPiscinaBambEquals(String spiPiscinaBamb) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_armadietti_spa = :spiArmadiettiSpa'.
	 */
	public StrutturaPiscine[] findWhereSpiArmadiettiSpaEquals(String spiArmadiettiSpa) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_piscina = :spiPiscina'.
	 */
	public StrutturaPiscine[] findWhereSpiPiscinaEquals(String spiPiscina) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_giochi_acqua = :spiGiochiAcqua'.
	 */
	public StrutturaPiscine[] findWhereSpiGiochiAcquaEquals(String spiGiochiAcqua) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_pisc_ultimo_piano = :spiPiscUltimoPiano'.
	 */
	public StrutturaPiscine[] findWhereSpiPiscUltimoPianoEquals(String spiPiscUltimoPiano) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_pisc_sfioro = :spiPiscSfioro'.
	 */
	public StrutturaPiscine[] findWhereSpiPiscSfioroEquals(String spiPiscSfioro) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_riscaldata = :spiRiscaldata'.
	 */
	public StrutturaPiscine[] findWhereSpiRiscaldataEquals(String spiRiscaldata) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_pisc_vista = :spiPiscVista'.
	 */
	public StrutturaPiscine[] findWhereSpiPiscVistaEquals(String spiPiscVista) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_pisc_salata = :spiPiscSalata'.
	 */
	public StrutturaPiscine[] findWhereSpiPiscSalataEquals(String spiPiscSalata) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_vasca_imm_fredda = :spiVascaImmFredda'.
	 */
	public StrutturaPiscine[] findWhereSpiVascaImmFreddaEquals(String spiVascaImmFredda) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_bar_bordo = :spiBarBordo'.
	 */
	public StrutturaPiscine[] findWhereSpiBarBordoEquals(String spiBarBordo) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_recinto = :spiRecinto'.
	 */
	public StrutturaPiscine[] findWhereSpiRecintoEquals(String spiRecinto) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_pisc_coperta = :spiPiscCoperta'.
	 */
	public StrutturaPiscine[] findWhereSpiPiscCopertaEquals(String spiPiscCoperta) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_pisc_coperta_stag = :spiPiscCopertaStag'.
	 */
	public StrutturaPiscine[] findWhereSpiPiscCopertaStagEquals(String spiPiscCopertaStag) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_pisc_coperta_anno = :spiPiscCopertaAnno'.
	 */
	public StrutturaPiscine[] findWhereSpiPiscCopertaAnnoEquals(String spiPiscCopertaAnno) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_pisc_aperto = :spiPiscAperto'.
	 */
	public StrutturaPiscine[] findWhereSpiPiscApertoEquals(String spiPiscAperto) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_pisc_aperto_stag = :spiPiscApertoStag'.
	 */
	public StrutturaPiscine[] findWhereSpiPiscApertoStagEquals(String spiPiscApertoStag) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_pisc_aperto_anno = :spiPiscApertoAnno'.
	 */
	public StrutturaPiscine[] findWhereSpiPiscApertoAnnoEquals(String spiPiscApertoAnno) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'spi_costo = :spiCosto'.
	 */
	public StrutturaPiscine[] findWhereSpiCostoEquals(float spiCosto) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaPiscine[] findWhereStrutturaStrIdEquals(long strutturaStrId) throws StrutturaPiscineDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the struttura_piscine table that match the specified arbitrary SQL statement
	 */
	public StrutturaPiscine[] findByDynamicSelect(String sql, Object[] sqlParams) throws StrutturaPiscineDaoException;

	/** 
	 * Returns all rows from the struttura_piscine table that match the specified arbitrary SQL statement
	 */
	public StrutturaPiscine[] findByDynamicWhere(String sql, Object[] sqlParams) throws StrutturaPiscineDaoException;

}
