/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mysecretwish.dao;

import com.mysecretwish.dto.*;
import com.mysecretwish.exceptions.*;

public interface StrutturaPulizieDao
{
	/** 
	 * Inserts a new row in the struttura_pulizie table.
	 */
	public StrutturaPuliziePk insert(StrutturaPulizie dto) throws StrutturaPulizieDaoException;

	/** 
	 * Updates a single row in the struttura_pulizie table.
	 */
	public void update(StrutturaPuliziePk pk, StrutturaPulizie dto) throws StrutturaPulizieDaoException;

	/** 
	 * Deletes a single row in the struttura_pulizie table.
	 */
	public void delete(StrutturaPuliziePk pk) throws StrutturaPulizieDaoException;

	/** 
	 * Returns the rows from the struttura_pulizie table that matches the specified primary-key value.
	 */
	public StrutturaPulizie findByPrimaryKey(StrutturaPuliziePk pk) throws StrutturaPulizieDaoException;

	/** 
	 * Returns all rows from the struttura_pulizie table that match the criteria 'spu_id = :spuId'.
	 */
	public StrutturaPulizie findByPrimaryKey(long spuId) throws StrutturaPulizieDaoException;

	/** 
	 * Returns all rows from the struttura_pulizie table that match the criteria ''.
	 */
	public StrutturaPulizie[] findAll() throws StrutturaPulizieDaoException;

	/** 
	 * Returns all rows from the struttura_pulizie table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaPulizie[] findByStruttura(long strutturaStrId) throws StrutturaPulizieDaoException;

	/** 
	 * Returns all rows from the struttura_pulizie table that match the criteria 'spu_id = :spuId'.
	 */
	public StrutturaPulizie[] findWhereSpuIdEquals(long spuId) throws StrutturaPulizieDaoException;

	/** 
	 * Returns all rows from the struttura_pulizie table that match the criteria 'spu_lav_secco = :spuLavSecco'.
	 */
	public StrutturaPulizie[] findWhereSpuLavSeccoEquals(String spuLavSecco) throws StrutturaPulizieDaoException;

	/** 
	 * Returns all rows from the struttura_pulizie table that match the criteria 'spu_serv_stireria = :spuServStireria'.
	 */
	public StrutturaPulizie[] findWhereSpuServStireriaEquals(String spuServStireria) throws StrutturaPulizieDaoException;

	/** 
	 * Returns all rows from the struttura_pulizie table that match the criteria 'spu_serv_lavand = :spuServLavand'.
	 */
	public StrutturaPulizie[] findWhereSpuServLavandEquals(String spuServLavand) throws StrutturaPulizieDaoException;

	/** 
	 * Returns all rows from the struttura_pulizie table that match the criteria 'spu_serv_giorn = :spuServGiorn'.
	 */
	public StrutturaPulizie[] findWhereSpuServGiornEquals(String spuServGiorn) throws StrutturaPulizieDaoException;

	/** 
	 * Returns all rows from the struttura_pulizie table that match the criteria 'spu_lustrascarpe = :spuLustrascarpe'.
	 */
	public StrutturaPulizie[] findWhereSpuLustrascarpeEquals(String spuLustrascarpe) throws StrutturaPulizieDaoException;

	/** 
	 * Returns all rows from the struttura_pulizie table that match the criteria 'spu_stira_pant = :spuStiraPant'.
	 */
	public StrutturaPulizie[] findWhereSpuStiraPantEquals(String spuStiraPant) throws StrutturaPulizieDaoException;

	/** 
	 * Returns all rows from the struttura_pulizie table that match the criteria 'struttura_str_id = :strutturaStrId'.
	 */
	public StrutturaPulizie[] findWhereStrutturaStrIdEquals(long strutturaStrId) throws StrutturaPulizieDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the struttura_pulizie table that match the specified arbitrary SQL statement
	 */
	public StrutturaPulizie[] findByDynamicSelect(String sql, Object[] sqlParams) throws StrutturaPulizieDaoException;

	/** 
	 * Returns all rows from the struttura_pulizie table that match the specified arbitrary SQL statement
	 */
	public StrutturaPulizie[] findByDynamicWhere(String sql, Object[] sqlParams) throws StrutturaPulizieDaoException;

}
